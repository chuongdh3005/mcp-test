main();
const { MCPClient } = require("./mcp-client");

// Phi√™n b·∫£n ƒë∆°n gi·∫£n h∆°n c·ªßa host ƒë·ªÉ debug
async function main() {
  console.log("üîç B·∫Øt ƒë·∫ßu ch∆∞∆°ng tr√¨nh debug...");

  // Kh·ªüi t·∫°o m√°y kh√°ch MCP
  const mcpClient = new MCPClient("ws://localhost:3000");

  try {
    console.log("ƒêang k·∫øt n·ªëi v·ªõi m√°y ph·ª•c v·ª• MCP...");
    await mcpClient.connect();
    console.log("K·∫øt n·ªëi th√†nh c√¥ng, ƒë√£ kh·ªüi t·∫°o giao th·ª©c");

    // T·∫°m d·ª´ng ƒë·ªÉ ƒë·∫£m b·∫£o kh·ªüi t·∫°o ho√†n t·∫•t
    await new Promise((resolve) => setTimeout(resolve, 1000));

    // Li·ªát k√™ c√¥ng c·ª•
    console.log("ƒêang l·∫•y danh s√°ch c√¥ng c·ª•...");
    const toolsResult = await mcpClient.listTools();
    console.log("Danh s√°ch c√¥ng c·ª•:", JSON.stringify(toolsResult, null, 2));

    // G·ªçi c√¥ng c·ª• ƒë·ªÉ l·∫•y gi√° Bitcoin
    console.log("ƒêang l·∫•y gi√° Bitcoin...");
    const btcPrice = await mcpClient.callTool("get_coin_price", {
      symbol: "BTC",
    });
    console.log("K·∫øt qu·∫£ gi√° Bitcoin:", JSON.stringify(btcPrice, null, 2));

    // T·∫°o tin nh·∫Øn ƒë∆°n gi·∫£n
    console.log("ƒêang t·∫°o tin nh·∫Øn v·ªõi LLM...");
    const messages = [
      {
        role: "user",
        content: { type: "text", text: "Gi√° Bitcoin hi·ªán t·∫°i l√† bao nhi√™u?" },
      },
    ];

    const llmResponse = await mcpClient.createMessage(messages, {
      systemPrompt: `B·∫°n l√† tr·ª£ l√Ω AI chuy√™n v·ªÅ ti·ªÅn ƒëi·ªán t·ª≠. 
      Th√¥ng tin m·ªõi nh·∫•t v·ªÅ BTC: ${JSON.stringify(btcPrice)}. 
      Tr·∫£ l·ªùi ng·∫Øn g·ªçn v√† th√¢n thi·ªán.`,
      modelPreferences: {
        hints: [{ name: "gpt-4" }],
        intelligencePriority: 0.8,
      },
      maxTokens: 200,
    });

    console.log("Ph·∫£n h·ªìi t·ª´ LLM:", JSON.stringify(llmResponse, null, 2));

    // ƒê√≥ng k·∫øt n·ªëi
    mcpClient.disconnect();
    console.log("ƒê√£ ƒë√≥ng k·∫øt n·ªëi. Debug ho√†n t·∫•t.");
  } catch (error) {
    console.error("L·ªói trong qu√° tr√¨nh debug:", error);
  }
}

// Ch·∫°y h√†m main
main();
